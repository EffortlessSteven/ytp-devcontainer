# Rust build artifacts
/target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
# Cargo.lock

# Nix & Devbox related
.direnv/
.devbox/
.devcontainer/.project.bootstrap.hash

# Dev Container cache volumes (if ever mounted locally)
.cargo-cache/
.rustup-cache/
.devbox-cache/

# IDE - VSCode
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json

# Local development environment files
.env
.env.local

# Generated by Cargo
# Will have compiled files and executables
debug/
debug-profile/
release/
release-profile/

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# macOS
.DS_Store
.AppleDouble
.LSOverride
._*

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
[Dd]esktop.ini

# Linux
*~
.directory
.Trash-*
.devcontainer/*.hash
.envrc.local
